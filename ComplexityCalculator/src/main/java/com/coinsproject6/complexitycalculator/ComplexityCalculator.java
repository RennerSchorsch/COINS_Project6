/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.coinsproject6.complexitycalculator;

import net.davidashen.text.*;
import net.davidashen.util.*;
import java.text.*;
 
/**
 *
 * @author tobeflow
 */
public class ComplexityCalculator extends javax.swing.JFrame {

     net.davidashen.text.Hyphenator hp;
             
    /**
     * Creates new form Calculator
     */
    public ComplexityCalculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        debugTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Flesch-Score:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        inputTextArea.setColumns(20);
        inputTextArea.setRows(5);
        jScrollPane2.setViewportView(inputTextArea);

        debugTextArea.setColumns(20);
        debugTextArea.setRows(5);
        jScrollPane3.setViewportView(debugTextArea);

        jButton1.setText("Calculate!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jButton1)
                .addGap(33, 33, 33)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(177, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(12, 12, 12))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(269, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      try {  
        
            debugTextArea.setText(null);

            double flesch = getComplexity(inputTextArea.getText());

            DecimalFormat f = new DecimalFormat("#0.00"); 

            jLabel1.setText(f.format(flesch));
 
        } catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComplexityCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComplexityCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComplexityCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComplexityCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComplexityCalculator().setVisible(true);
            }
        });
    }

    
    public double getComplexity(String text) throws Exception {
        
        hp = new net.davidashen.text.Hyphenator();
        hp.setErrorHandler(new ErrorHandler() {
        public void debug(String guard,String s) {}
                public void info(String s) {System.err.println(s);}
                public void warning(String s) {System.err.println("WARNING: "+s);}
                public void error(String s) {System.err.println("ERROR: "+s);}
                public void exception(String s,Exception e) {System.err.println("ERROR: "+s); e.printStackTrace(); }
                public boolean isDebugged(String guard) {return false;}
              });
        
        hp.loadTable(new java.io.BufferedInputStream(new java.io.FileInputStream("hyphen.tex")));
        // hp.loadTable(new java.io.BufferedInputStream(new java.io.FileInputStream("hyphen_dictionary_german.tex")));
        
        
        int wordsCount = 0;
        int hyphenCount = 0;
        
        int sentenceCount = 0;
        int wordsInSentence = 0;
        
        String currentWord = "";
        for (int i = 0; i < text.length();i++) {
            
            if (isLetter(text.charAt(i))) {
                currentWord += text.charAt(i);
            } else
            {
                if (!currentWord.isEmpty()) {
                    hyphenCount += getWordHyphenCount(currentWord);
                    wordsInSentence++;
                    currentWord = "";
                    
                }
                
                if (isSentenceEnd(text.charAt(i))) {
                    sentenceCount++;
                    wordsCount += wordsInSentence;
            //        System.out.println(String.valueOf(wordsInSentence));
             //       System.out.println(String.valueOf(sentenceCount));
                    wordsInSentence = 0;
                }
                
            }
            
            
        }
            if (!currentWord.isEmpty()) {
                    hyphenCount += getWordHyphenCount(currentWord);
                    wordsInSentence++;
            }
                    
       
        outputDebugInfo("\n" + "\n" + "Wörter insgesamt: " + String.valueOf(wordsCount));
        outputDebugInfo("\n" + "Sätze insgesamt: " + String.valueOf(sentenceCount));
        outputDebugInfo("\n" + "Silben insgesamt: " + String.valueOf(hyphenCount));
        
        double averageSentenceLength = (double) wordsCount/(double) sentenceCount;
        double averageWordSyllables = (double) hyphenCount/(double) wordsCount;
        double fleschScore = 206.835 - (1.015 * averageSentenceLength) - (84.6 * averageWordSyllables);
        
        outputDebugInfo("\n" + "durchschnittliche Satzlänge: " + String.valueOf(averageSentenceLength));
        outputDebugInfo("\n" + "durchschnittliche Silbenanzahl pro Wort: " + String.valueOf(averageWordSyllables));
        outputDebugInfo("\n" + "\n" + "Flesch-Score: " + String.valueOf(fleschScore));
        
        return fleschScore;
        
    }

    public void outputDebugInfo(String info) {
        
        debugTextArea.setText(debugTextArea.getText() + info);
        
    }
   
    
    public int getWordHyphenCount(String word) {
    
        String hyphenatedWord = hp.hyphenate(word, 2, 3);
        outputDebugInfo(hyphenatedWord);
        int hCount = 1;
      
            for (int i=0; i < hyphenatedWord.length(); i++) {
                if (hyphenatedWord.charAt(i) == 173) {
                        hCount++;
                }
            }
        return hCount;
        
    }
    
    private boolean isLetter(char letter) {
        
   //    System.out.println(String.valueOf(Integer.valueOf(letter)));
        
         if (((65 <= letter) && (letter<=90))
                || ((97 <= letter) && (letter<=122)))
             return true;
         
         return false;
    }
    
    private boolean isSentenceEnd(char letter) {
        
        
        if ((33 == letter) || (46 == letter) || (63 == letter)) {
            return true;
        }
        
            outputDebugInfo(String.valueOf(letter) + "\n");
        return false;
         
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea debugTextArea;
    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
